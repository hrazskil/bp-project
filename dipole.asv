%% cleaning
clc
clear
%% inicialization for testing transformation functions

nDip=2;
dip.pos = rand(nDip,3);
dip.dir = rand(nDip,3);
complAmpl = rand(nDip,1)+  1i*rand(nDip,1);


f = 10000;

nObs=100;
rObserved=rand(nObs,3);

%% inicialization for testing transformation functions
rObserved= [0 0 0;...
            1 0 0;...
            0 1 0;...
            0 0 1;...
            1 1 0;...
            0 1 1;...
            1 0 1;...
            1 1 1];
dip.pos = [0 0 0];
dip.dir = [0 0 0];
%% testing transformation functions
[sphRObs(:,1),sphRObs(:,2),sphRObs(:,3)] = ...
utilities.cart2sphKH(rObserved(:,1),rObserved(:,2),rObserved(:,3));
[rObsN(:,1),rObsN(:,2),rObsN(:,3)] = ...
utilities.sph2cartKH(sphRObs(:,1),sphRObs(:,2),sphRObs(:,3));

errorRObs=rObsN-rObserved


    %%
tic
[eF] = fieldEvaluation.eleField(rObserved,dip,f,complAmpl);
toc

eF.*conj(eF)

tic
const = utilities.constants.giveConstants;
pow = (1/(2*const.Z0))*(eF.*conj(eF))
toc
%  % better for ndip=nobs or ndip>nobs
% tic
% [mF] = fieldEvaluation.magField(rObserved,dip,f,complAmpl);
% toc
% 
% %better for nobs>>ndip
% %needs to be optimized
% tic
% [mFM] = fieldEvaluation.magFieldM(rObserved,dip,f,complAmpl); 
% toc